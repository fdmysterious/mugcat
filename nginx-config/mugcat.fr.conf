server {
    listen 443 ssl http2 default_server;
    server_name mugcat.fr;
    charset utf-8;

    root /srv/http/root;
    index index.html;

    include default_ssl.conf;
	ssl_certificate     /etc/letsencrypt/live/mugcat.fr-0001/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/mugcat.fr-0001/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/mugcat.fr-0001/fullchain.pem;

	## Browser caching ##
	expires $expires;
	## End of section ##

    location =/ {
        # TODO # Use Accept-Language header
        return 302 $scheme://$server_name/fr;
    }

    location =/assets/img/cats {
        content_by_lua_block {
            math.randomseed( os.time() )
            local pres = io.popen(
                'find ' .. ngx.var.realpath_root .. '/assets/img/cats/ -iname "*.jpg" -type f -printf "%f\n"'
            )

            local files = {}
            for f in pres:lines()
                do table.insert( files, f )
            end

            return ngx.redirect(
                ngx.var.scheme .. "://" .. ngx.var.server_name .. "/assets/img/cats/" .. files[ math.random(#files) ]
            )
        }
    }


    ##############

    location /fr/ {
        error_page 400 /fr/err/400.html;
        error_page 401 /fr/err/401.html;
        error_page 403 /fr/err/403.html;
        error_page 404 /fr/err/404.html;
        error_page 405 /fr/err/405.html;
        error_page 406 /fr/err/406.html;
        error_page 414 /fr/err/414.html;
        error_page 415 /fr/err/415.html;
        error_page 429 /fr/err/429.html;

        error_page 500 /fr/err/500.html;
        error_page 501 /fr/err/501.html;
        error_page 502 /fr/err/502.html;
        error_page 503 /fr/err/503.html;
        error_page 505 /fr/err/505.html;

        if ($request_uri ~ ^/(.*)\.html$) {
            return 302 /$1;
        }
        try_files $uri $uri.html $uri/ =404;
    }
}

server {
    listen 80;
    server_name mugcat.fr;
    return 301 https://$server_name$request_uri;
}
